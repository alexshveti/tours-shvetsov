[{"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\index.js":"1","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\App.js":"3","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\components\\header\\Header.js":"4","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\components\\searchbox\\SearchBox.js":"5","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\components\\sidebar\\Sidebar.js":"6","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\screens\\loginScreen\\LoginScreen.js":"7","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\screens\\registerScreen\\RegisterScreen.js":"8","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\screens\\hotelsScreen\\HotelsScreen.js":"9","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\components\\rating\\Rating.js":"10","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\screens\\hotelScreen\\HotelScreen.js":"11","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\screens\\NewHotelForm\\NewHotelForm.js":"12","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\store.js":"13","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\reducers\\userReducers.js":"14","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\constants\\userConstants.js":"15","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\actions\\userActions.js":"16","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\reducers\\hotelReducers.js":"17","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\constants\\hotelConstants.js":"18","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\actions\\hotelActions.js":"19","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\components\\hotelCard\\HotelCard.js":"20","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\reducers\\favoriteHotelReducers.js":"21","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\constants\\favoriteHotelConstants.js":"22","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\actions\\favoriteHotelActions.js":"23","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\components\\modal\\Modal.js":"24","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\screens\\followedHotels\\FollowedHotels.js":"25"},{"size":561,"mtime":1613922380234,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":499162500000,"results":"28","hashOfConfig":"27"},{"size":1513,"mtime":1616699894031,"results":"29","hashOfConfig":"27"},{"size":1715,"mtime":1616701833440,"results":"30","hashOfConfig":"27"},{"size":929,"mtime":1616700418678,"results":"31","hashOfConfig":"27"},{"size":1766,"mtime":1616438823525,"results":"32","hashOfConfig":"27"},{"size":2031,"mtime":1613923399544,"results":"33","hashOfConfig":"27"},{"size":3373,"mtime":1613923267772,"results":"34","hashOfConfig":"27"},{"size":1561,"mtime":1616699840225,"results":"35","hashOfConfig":"27"},{"size":1428,"mtime":1615593514322,"results":"36","hashOfConfig":"27"},{"size":6132,"mtime":1616438489788,"results":"37","hashOfConfig":"27"},{"size":9814,"mtime":1616437979147,"results":"38","hashOfConfig":"27"},{"size":1315,"mtime":1615821278531,"results":"39","hashOfConfig":"27"},{"size":1102,"mtime":1613922082968,"results":"40","hashOfConfig":"27"},{"size":389,"mtime":1613921785541,"results":"41","hashOfConfig":"27"},{"size":1995,"mtime":1614562619835,"results":"42","hashOfConfig":"27"},{"size":2413,"mtime":1616699258219,"results":"43","hashOfConfig":"27"},{"size":874,"mtime":1615821027662,"results":"44","hashOfConfig":"27"},{"size":3054,"mtime":1616699220291,"results":"45","hashOfConfig":"27"},{"size":1773,"mtime":1616438136746,"results":"46","hashOfConfig":"27"},{"size":2139,"mtime":1615810073977,"results":"47","hashOfConfig":"27"},{"size":784,"mtime":1615602739829,"results":"48","hashOfConfig":"27"},{"size":3337,"mtime":1615810125180,"results":"49","hashOfConfig":"27"},{"size":328,"mtime":1615901818877,"results":"50","hashOfConfig":"27"},{"size":1355,"mtime":1616700299515,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"6umzj4",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\index.js",[],["110","111"],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\App.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\components\\header\\Header.js",["112","113"],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\components\\searchbox\\SearchBox.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\components\\sidebar\\Sidebar.js",["114"],"import React,{useState,useEffect} from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport './sidebar.scss'\r\n\r\n\r\nconst Sidebar = () => {\r\n\r\n    const [activeLink,setActiveLink]=useState('home')\r\n    return (\r\n        <nav className=\"sidebar\" >\r\n            <ul className=\"side-nav\">\r\n                <li className={`side-nav__item ${activeLink==='home'?'side-nav__item--active':''}`}>\r\n                    <NavLink to=\"/\" className=\"side-nav__link\" onClick={()=>setActiveLink('home')}>\r\n\r\n                        <span>Hotel</span>\r\n                    </NavLink> \r\n                </li>\r\n                <li className={`side-nav__item ${activeLink==='home2'?'side-nav__item--active':''}`}>\r\n                    <NavLink to=\"/hotels/followed\" className=\"side-nav__link\" onClick={()=>setActiveLink('home2')}>\r\n\r\n                        <span>Followed</span>\r\n                    </NavLink>\r\n                </li>\r\n                <li className={`side-nav__item ${activeLink==='home3'?'side-nav__item--active':''}`}>\r\n                    <NavLink to=\"/hotels/new\" className=\"side-nav__link\" onClick={()=>setActiveLink('home3')}>\r\n\r\n                        <span>become a seller</span>\r\n                    </NavLink>\r\n                </li>\r\n                <li className={`side-nav__item ${activeLink==='home4'?'side-nav__item--active':''}`}>\r\n                    <NavLink to=\"/login\" className=\"side-nav__link\" onClick={()=>setActiveLink('home4')}>\r\n\r\n                        <span>Contact Me</span>\r\n                    </NavLink>\r\n                </li>\r\n            </ul>\r\n\r\n            <div className=\"legal\"> \r\n                &copy; 2017 by trillo. All rights reserved.\r\n                    </div>\r\n        </nav>\r\n\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\screens\\loginScreen\\LoginScreen.js",["115","116"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { login } from '../../actions/userActions.js';\r\n\r\nimport './loginScreen.scss'\r\n\r\nconst LoginScreen = ({  history }) => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const { error, loading, userInfo } = userLogin;\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(login(email, password))\r\n    };\r\n\r\n    useEffect(() => {\r\n        if(userInfo){\r\n            history.push('/')\r\n        }\r\n    }, [history, userInfo])\r\n\r\n    return (\r\n        <div className='login-screen'> \r\n            <form className='form' onSubmit={submitHandler}> \r\n                <h2 className='form__heading'>Login</h2>\r\n                <div className='form__input-area'>\r\n                    <input onChange={(e)=>setEmail(e.target.value)}  value={email} className='form__input' type='email' placeholder='Email' />\r\n                    <span className='form__icon-span'>\r\n                        <i className='fas fa-user form__icon'></i>\r\n                    </span>\r\n                </div>\r\n\r\n                <div className='form__input-area'>\r\n                    <input onChange={(e)=>setPassword(e.target.value)} value={password} className='form__input' type='passowrd' placeholder='Email' />\r\n                    <span className='form__icon-span'>\r\n                        <i className='fas fa-lock form__icon'></i>\r\n                    </span>\r\n                </div>\r\n                <div className='form__buttons'>\r\n                    <button className='form__btn' onClick={submitHandler}>Submit</button>\r\n                    <button className='form__btn' onClick={(e)=>{e.preventDefault(); history.push('/register')}}>Sign-Up</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\screens\\registerScreen\\RegisterScreen.js",["117","118","119"],"import React, { useState, useEffect } from 'react';\r\nimport { register } from '../../actions/userActions.js';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport './registerScreen.scss'\r\n\r\nconst RegisterScreen = ({ history }) => {\r\n    const [email, setEmail] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [coniformPassword, setConiformPassword] = useState('');\r\n    const [message, setMessage] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n    const userRegister = useSelector(state => state.userRegister);\r\n    const { error, loading, userInfo } = userRegister;\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (password !== coniformPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(register(name, email, password))\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if(userInfo){\r\n            history.push('/')\r\n        }\r\n      \r\n    }, [history, userInfo])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className='register-screen'>\r\n            <form className='form' >\r\n                <h2 className='form__heading'>Sigh Up</h2>\r\n                <div className='form__input-area'>\r\n                    <input className='form__input' type='text' placeholder='Name'\r\n                        value={name} onChange={(e) => setName(e.target.value)} />\r\n                    <span className='form__icon-span'>\r\n                        <i className='fas fa-user form__icon'></i>\r\n                    </span>\r\n                </div>\r\n                <div className='form__input-area'>\r\n                    <input className='form__input' type='email' placeholder='Email'\r\n                        value={email} onChange={(e) => setEmail(e.target.value)} />\r\n                    <span className='form__icon-span'>\r\n                        <i className='fas fa-user form__icon'></i>\r\n                    </span>\r\n                </div>\r\n\r\n                <div className='form__input-area'>\r\n                    <input className='form__input' type='passowrd' placeholder='Passowrd'\r\n                        value={password} onChange={(e) => setPassword(e.target.value)} />\r\n                    <span className='form__icon-span'>\r\n                        <i className='fas fa-lock form__icon'></i>\r\n                    </span>\r\n                </div>\r\n                <div className='form__input-area'>\r\n                    <input className='form__input' type='passowrd' placeholder='Confirm Passowrd'\r\n                        value={coniformPassword} onChange={(e) => setConiformPassword(e.target.value)} />\r\n                    <span className='form__icon-span'>\r\n                        <i className='fas fa-lock form__icon'></i>\r\n                    </span>\r\n                </div>\r\n                <div className='form__buttons'>\r\n                    <button className='form__btn' onClick={submitHandler}>Sign-Up</button>\r\n                    <button className='btn form__btn' onClick={(e) => e.preventDefault()}>\r\n                        <span className=\"btn__visable\">Guset</span>\r\n                        <span className=\"btn__invisible\">continue</span>\r\n                    </button>\r\n                </div>\r\n            </form>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\screens\\hotelsScreen\\HotelsScreen.js",["120","121","122"],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\components\\rating\\Rating.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\screens\\hotelScreen\\HotelScreen.js",["123","124","125"],"import React, { useState,useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { listHotelDetails, createHotelReview } from '../../actions/hotelActions';\r\nimport Modal from '../../components/modal/Modal';\r\nimport { HOTEL_CREATE_REVIEW_RESET } from '../../constants/hotelConstants';\r\n\r\nimport './hotelScreen.scss'\r\n\r\nexport const HotelScreen = ({ match }) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const hotelDetails = useSelector(state => state.hotelDetails);\r\n    const { loading, error, hotel } = hotelDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const { userInfo } = userLogin\r\n\r\n    \r\n    const hotelReviewCreate = useSelector(state => state.hotelReviewCreate);\r\n    const { success: successHotelReview, error: errorHotelReview } = hotelReviewCreate\r\n\r\n\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n    const [show, setShow] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (successHotelReview) {\r\n            alert('Review Submitted')\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({ type: HOTEL_CREATE_REVIEW_RESET })\r\n        }\r\n        if(errorHotelReview) setShow(true)\r\n        dispatch(listHotelDetails(match.params.id))\r\n    }, [dispatch, match,errorHotelReview])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        console.log(hotel);\r\n        if(!comment) return\r\n        \r\n\r\n        dispatch(createHotelReview(match.params.id, { rating, comment }))\r\n    }\r\n\r\n    return (\r\n        <div className='hotel-screen'>\r\n{(show) && <Modal show={show} setShow={setShow} text={errorHotelReview}/>}\r\n            {loading ? <div>loading</div> : <>  {hotel.images.length === 1 ?\r\n                <div className='hotel-screen__gallery'>\r\n                    <figure >\r\n                        <img alt='image1' className='hotel-screen__gallery-photo1' src={hotel.images[0]} /></figure>\r\n                </div> :\r\n                hotel.images.length === 2 ?\r\n                    <div className='hotel-screen__gallery'>\r\n                        <figure ><img alt='image1' className='hotel-screen__gallery-photo' src={hotel.images[0]} /></figure>\r\n                        <figure ><img alt='image2' className='hotel-screen__gallery-photo' src={hotel.images[1]} /></figure>\r\n                    </div> :\r\n                    <div className='hotel-screen__gallery'>\r\n                        <figure ><img alt='image1' className='hotel-screen__gallery-photo' src={hotel.images[0]} /></figure>\r\n                        <figure ><img alt='image2' className='hotel-screen__gallery-photo' src={hotel.images[1]} /></figure>\r\n                        <figure ><img alt='image3' className='hotel-screen__gallery-photo' src={hotel.images[2]} /></figure>\r\n                    </div>}\r\n\r\n                <div className=\"hotel-screen__overview\">\r\n                    <h1 className=\"hotel-screen__overview-heading\">\r\n                        {hotel.name}\r\n                    </h1>\r\n\r\n\r\n                    <div className=\"hotel-screen__overview-location\">\r\n                        <i className='hotel-screen__me fas fa-map-marked-alt'></i>\r\n                        <button className=\"hotel-screen-btn-inline\">\r\n                           {hotel.city},  {hotel.country}\r\n                        </button>\r\n                    </div>\r\n\r\n                    <div className=\"hotel-screen__overview-rating\">\r\n                        <div className=\"hotel-screen__overview-rating-avarage\">{hotel.rating}</div>\r\n                        <div className=\"hotel-screen__overview-rating-count\">{hotel.numReviews} votes</div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='hotel-screen__content'>\r\n                    <div className='hotel-screen__content-right'>\r\n                        <div className='hotel-screen__content-description'>{hotel.description}</div>\r\n                        <form className='hotel-screen__content-form'>\r\n                            <h3 className='hotel-screen__content-form-header'>Tell us about your experience</h3>\r\n\r\n\r\n                            <div className='hotel-screen__content-form-textarea-container'>\r\n                                <textarea className='hotel-screen__content-form-textarea' \r\n                                value={comment} onChange={(e) => setComment(e.target.value)}/>\r\n                            </div>\r\n                            <div className='hotel-screen__content-form-footer'>\r\n                                <span>0</span><input type='range' min='0' max='10' \r\n                                value={rating} onChange={(e) => setRating(e.target.value)}/><span>10</span>\r\n                                <button onClick={(e)=>submitHandler(e)}>submit</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                    <div className='hotel-screen__content-left'>\r\n                        {hotel.reviews.map((review, index) => (\r\n                            <div key={index} className='hotel-screen__content-left-review'>\r\n                                <blockquote className='hotel-screen__content-left-review-text'>\r\n                                    {review.comment}\r\n                                </blockquote>\r\n                                <div className='hotel-screen__content-left-review-details'>\r\n                                    <div className='hotel-screen__content-left-review-user'>\r\n                                        <h4>{review.name}</h4>\r\n                                        {/* <div>{review.date.toLocaleDateString(\"en-US\")}</div> */}\r\n                                    </div>\r\n                                    <span>{review.rating}</span>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                        <button className=\"hotel-screen__content-left-btn-inline\">Show all <span>&rarr;</span></button>\r\n                    </div>\r\n                </div>\r\n            </>}\r\n        </div >\r\n    )\r\n}\r\n","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\screens\\NewHotelForm\\NewHotelForm.js",["126","127","128","129","130","131","132","133","134"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { createHotelAction } from '../../actions/hotelActions.js'\r\nimport './newHotelForm.scss'\r\nimport { HOTEL_CREATE_RESET } from '../../constants/hotelConstants';\r\nimport HotelCard from '../../components/hotelCard/HotelCard';\r\nimport Modal from '../../components/modal/Modal.js';\r\n\r\n\r\nconst NewHotelForm = () => {\r\n    // add each hook to be obj with name and error\r\n    const [name, setName] = useState({ value: 'Hotel ', error: false })\r\n    const [country, setCountry] = useState({ value: '', error: false })\r\n    const [city, setCity] = useState({ value: '', error: false })\r\n    const [street, setStreet] = useState({ value: '', error: false })\r\n    const [price, setPrice] = useState({ value: 0, error: false })\r\n    const [description, setDescription] = useState({ value: '', error: false })\r\n    const [coverImage, setCoverImage] = useState({ value: '', error: false })\r\n    const [images, setImages] = useState({ value: '', error: false })\r\n    const [coverImageURL, setCoverImageURL] = useState('')\r\n    const [galleryImages, setGalleryImages] = useState([''])\r\n    const [uploading, setUploading] = useState(false);\r\n    const [show, setShow] = useState(true);\r\n    const [showPreview, setShowPreview] = useState(true);\r\n    const [showError, setShowError] = useState(true);\r\n    const [error, setError] = useState(false);\r\n    const [showModal, setShowModal] = useState(false)\r\n    const hotelCreate = useSelector(state => state.hotelCreate);\r\n    const { error: hotelCreateError, loading, hotel } = hotelCreate;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const setGalleryImagesFunc = (e) => {\r\n        let images = []\r\n        Object.keys(e.target.files).map(f => images.push(URL.createObjectURL(e.target.files[f])))\r\n        setGalleryImages(images)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (hotel) {\r\n            dispatch({ type: HOTEL_CREATE_RESET })\r\n            setName({ value: 'Hotel ', error: false });\r\n            setStreet({ value: '', error: false });\r\n            setPrice({ value: 0, error: false });\r\n            setCountry({ value: '', error: false });\r\n            setCity({ value: '', error: false });\r\n            setCoverImage({ value: '', error: false });\r\n            setImages({ value: '', error: false });\r\n            setDescription({ value: '', error: false });\r\n        }\r\n    }, [dispatch, hotel])\r\n\r\n\r\n    const uploadCoverHandler = async (file) => {\r\n        const formData = new FormData()\r\n        formData.append('image', file)\r\n        setUploading(true)\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/upload', formData, config)\r\n            setCoverImage({ value: data });\r\n            setUploading(false)\r\n\r\n        } catch (error) {\r\n            console.error(error)\r\n        }\r\n    }\r\n\r\n    const uploadGalleryHandler = async (files) => {\r\n        //add setUploading and loader so form will send after this\r\n        if (files.length > 3) return alert('asdadsassd')\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n            let tempImages = [];\r\n\r\n            (async () => {\r\n                Object.keys(files).map(async (f) => {\r\n                    const formData = new FormData()\r\n                    setUploading(true)\r\n                    formData.append('image', files[f])\r\n                    const { data } = await axios.post('/api/upload', formData, config)\r\n                    tempImages.push(data)\r\n                })\r\n            })();\r\n\r\n            setImages({ value: tempImages })\r\n            setUploading(false)\r\n\r\n        } catch (error) {\r\n            console.error(error)\r\n        }\r\n    }\r\n\r\n    const checkError = (value, index) => {\r\n        if (value.length === 0 || value === 0) {\r\n            setError(true)\r\n\r\n            switch (index) {\r\n                case 0:\r\n                    setName({ value, error: true })\r\n                    break;\r\n                case 1:\r\n                    setCountry({ value, error: true })\r\n                    break;\r\n                case 2:\r\n                    setCity({ value, error: true })\r\n                    break;\r\n                case 3:\r\n                    setStreet({ value, error: true })\r\n                    break;\r\n                case 4:\r\n                    setPrice({ value, error: true })\r\n                    break;\r\n                case 5:\r\n                    setDescription({ value, error: true })\r\n                    break;\r\n                case 6:\r\n                    setImages({ value, error: true })\r\n                    break;\r\n                case 7:\r\n                    setCoverImage({ value, error: true })\r\n                    break;\r\n\r\n                default: return\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const submitHandler = async (e) => {\r\n        e.preventDefault();\r\n\r\n        [name, country, city, street, price, description, images, coverImage].map((input, index) => checkError(input.value, index))\r\n        const errorIndex = [name, country, city, street, price, description, images, coverImage].findIndex((input) => (input.value.length === 0 || input.value === 0))\r\n\r\n        if (errorIndex > 0) {\r\n            return\r\n        }\r\n        dispatch(createHotelAction({\r\n            name, country, city, street, description, price, coverImage, images\r\n        }))\r\n        setShowModal(true)\r\n        setTimeout(()=>{setShowModal(false)},3000)\r\n    };\r\n\r\n    // aDd action that updates all the inputs to store when clicking preview and use effect that filles the inputs\r\n    return (\r\n        <>\r\n{(showModal) && <Modal show={showModal} setShow={setShowModal} text='Hotel Submitted'/>}\r\n \r\n            <form className='new-hotel'>\r\n                <h1 className='new-hotel__heading'>Add New Hotel</h1>\r\n                <div className={`new-hotel__input-area ${name.error ? 'error' : 'no-error'}`}>\r\n                    <input className='new-hotel__input' type='passowrd' placeholder='Name'\r\n                        value={name.value} onChange={(e) => setName({ value: e.target.value })} />\r\n\r\n                </div>\r\n                <div className='new-hotel__adress-area'>\r\n                    <input className={`new-hotel__adress-input ${country.error ? 'error' : 'no-error'}`} type='text' placeholder='country'\r\n                        value={country.value} onChange={(e) => setCountry({ value: e.target.value })} />\r\n                    <input className={`new-hotel__adress-input ${city.error ? 'error' : 'no-error'}`} type='text' placeholder='city'\r\n                        value={city.value} onChange={(e) => setCity({ value: e.target.value })} />\r\n                    <input className={`new-hotel__adress-input ${street.error ? 'error' : 'no-error'}`} type='text' placeholder='street'\r\n                        value={street.value} onChange={(e) => setStreet({ value: e.target.value })} />\r\n\r\n                </div>\r\n                <div className='new-hotel__input-area'>\r\n                    <input className={`new-hotel__input ${price.error ? 'error' : 'no-error'}`} type='number' placeholder='price'\r\n                        value={price.value} onChange={(e) => setPrice({ value: e.target.value })} />\r\n\r\n                </div>\r\n                <div className='new-hotel__input-area'>\r\n                    <textarea className={`new-hotel__input textarea ${description.error ? 'error' : 'no-error'}`} placeholder='description'\r\n                        value={description.value} onChange={(e) => setDescription({ value: e.target.value })} />\r\n\r\n                </div>\r\n\r\n                <div className='new-hotel__image-area '>\r\n\r\n                    <label className={`new-hotel__image-label ${coverImage.error ? 'error' : 'no-error'}`} htmlFor='firstImage'>\r\n                        <input className='new-hotel__image-input' type=\"file\" accept=\"image/*\" placeholder=\"image\" id='firstImage'\r\n                            onChange={((e) => { setCoverImageURL(URL.createObjectURL(e.target.files[0])); uploadCoverHandler(e.target.files[0]) })} />add cover image</label>\r\n\r\n                    <label className={`new-hotel__image-label ${images.error ? 'error' : 'no-error'}`} htmlFor='secondImage'>\r\n                        <input className='new-hotel__image-input' type=\"file\" accept=\"image/*\" placeholder=\"image\" id='secondImage' multiple\r\n                            onChange={((e) => { setGalleryImagesFunc(e); uploadGalleryHandler(e.target.files) })} />\r\n                             add images (3 max)\r\n                    </label>\r\n\r\n                </div>\r\n                <div className='new-hotel__buttons-area'>\r\n                    <button className='new-hotel__btn' onClick={(e) => { e.preventDefault(); setShow(!show) }}>preview</button>\r\n                    <button className='new-hotel__btn' onClick={submitHandler}>submit</button>\r\n                </div>\r\n            </form>\r\n            <div className={`new-hotel__modal ${show ? 'hidden' : ''}`} onClick={()=>setShow(!show)}>\r\n                <div className={`new-hotel__modal-content`} >\r\n                    <HotelCard\r\n                        hotel={{\r\n                            _id: '21', name: name.value,\r\n                            adress: { city: city.value, street: street.value, country: country.value },\r\n                            rating: 8, coverImage:coverImageURL,\r\n                        }} index='demo' />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NewHotelForm\r\n","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\store.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\reducers\\userReducers.js",["135"],"import axios from 'axios';\r\nimport {\r\n   USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT,\r\n    USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS,\r\n} from '../constants/userConstants';\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true };\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload };\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case USER_LOGOUT:\r\n            return {};\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true };\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload };\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state\r\n    }\r\n}","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\actions\\userActions.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\reducers\\hotelReducers.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\constants\\hotelConstants.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\actions\\hotelActions.js",["136"],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\components\\hotelCard\\HotelCard.js",["137","138","139","140","141"],"import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\nimport Rating from '../../components/rating/Rating'\r\nimport { NavLink } from 'react-router-dom';\r\nimport './hotelCard.scss'\r\nimport img from './hotel1.jpg'\r\nimport { createFavoriteHotelAction,deleteFavoriteHotel } from '../../actions/favoriteHotelActions';\r\n\r\nconst HotelCard = ({ hotel, index, id }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const toggleFavoriteHotel = () => {\r\n        if (!id) {\r\n            dispatch(createFavoriteHotelAction(hotel))\r\n        } else {\r\n            dispatch(deleteFavoriteHotel(id._id))\r\n        }\r\n\r\n    }\r\n    return (\r\n\r\n        <div key={index} className='hotel-card'>\r\n            <div className='hotel-card__heading'>\r\n                {hotel.coverImage && <img className='hotel-card__background-image' src={hotel.coverImage} alt='background-image' />}\r\n                <h3 className='hotel-card__name'>{hotel.name}</h3>\r\n                <i className={` hotel-card__invisable-like ${id ? 'fas fa-heart' : 'far fa-heart'}`} onClick={toggleFavoriteHotel}></i>\r\n                <i className='fas fa-map-marked-alt hotel-card__invisable-map'></i>\r\n            </div>\r\n            <div className='hotel-card__adress'>\r\n                {hotel.city} {hotel.street}, {hotel.country}\r\n            </div>\r\n            <Rating value={hotel.rating/2} text={`${hotel.numReviews | index !== 'demo'? 0:5} reviews`} />\r\n            <div className='hotel-card__footer'>\r\n                <NavLink to={index !== 'demo'?`/hotel/${hotel._id}`:'#'} className='hotel-card__btn'>\r\n                    details\r\n                </NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HotelCard\r\n","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\reducers\\favoriteHotelReducers.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\constants\\favoriteHotelConstants.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\actions\\favoriteHotelActions.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\components\\modal\\Modal.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\screens\\followedHotels\\FollowedHotels.js",["142"],{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","severity":1,"message":"148","line":17,"column":13,"nodeType":"149","messageId":"150","endLine":17,"endColumn":18},{"ruleId":"147","severity":1,"message":"151","line":17,"column":20,"nodeType":"149","messageId":"150","endLine":17,"endColumn":27},{"ruleId":"147","severity":1,"message":"152","line":1,"column":24,"nodeType":"149","messageId":"150","endLine":1,"endColumn":33},{"ruleId":"147","severity":1,"message":"148","line":13,"column":13,"nodeType":"149","messageId":"150","endLine":13,"endColumn":18},{"ruleId":"147","severity":1,"message":"151","line":13,"column":20,"nodeType":"149","messageId":"150","endLine":13,"endColumn":27},{"ruleId":"147","severity":1,"message":"153","line":12,"column":12,"nodeType":"149","messageId":"150","endLine":12,"endColumn":19},{"ruleId":"147","severity":1,"message":"148","line":16,"column":13,"nodeType":"149","messageId":"150","endLine":16,"endColumn":18},{"ruleId":"147","severity":1,"message":"151","line":16,"column":20,"nodeType":"149","messageId":"150","endLine":16,"endColumn":27},{"ruleId":"147","severity":1,"message":"154","line":4,"column":8,"nodeType":"149","messageId":"150","endLine":4,"endColumn":14},{"ruleId":"147","severity":1,"message":"155","line":5,"column":10,"nodeType":"149","messageId":"150","endLine":5,"endColumn":17},{"ruleId":"147","severity":1,"message":"148","line":19,"column":22,"nodeType":"149","messageId":"150","endLine":19,"endColumn":27},{"ruleId":"147","severity":1,"message":"148","line":13,"column":22,"nodeType":"149","messageId":"150","endLine":13,"endColumn":27},{"ruleId":"147","severity":1,"message":"156","line":16,"column":13,"nodeType":"149","messageId":"150","endLine":16,"endColumn":21},{"ruleId":"157","severity":1,"message":"158","line":36,"column":8,"nodeType":"159","endLine":36,"endColumn":42,"suggestions":"160"},{"ruleId":"147","severity":1,"message":"161","line":22,"column":12,"nodeType":"149","messageId":"150","endLine":22,"endColumn":25},{"ruleId":"147","severity":1,"message":"162","line":23,"column":12,"nodeType":"149","messageId":"150","endLine":23,"endColumn":21},{"ruleId":"147","severity":1,"message":"163","line":25,"column":12,"nodeType":"149","messageId":"150","endLine":25,"endColumn":23},{"ruleId":"147","severity":1,"message":"164","line":25,"column":25,"nodeType":"149","messageId":"150","endLine":25,"endColumn":39},{"ruleId":"147","severity":1,"message":"165","line":26,"column":12,"nodeType":"149","messageId":"150","endLine":26,"endColumn":21},{"ruleId":"147","severity":1,"message":"166","line":26,"column":23,"nodeType":"149","messageId":"150","endLine":26,"endColumn":35},{"ruleId":"147","severity":1,"message":"148","line":27,"column":12,"nodeType":"149","messageId":"150","endLine":27,"endColumn":17},{"ruleId":"147","severity":1,"message":"167","line":30,"column":20,"nodeType":"149","messageId":"150","endLine":30,"endColumn":36},{"ruleId":"147","severity":1,"message":"151","line":30,"column":38,"nodeType":"149","messageId":"150","endLine":30,"endColumn":45},{"ruleId":"147","severity":1,"message":"168","line":1,"column":8,"nodeType":"149","messageId":"150","endLine":1,"endColumn":13},{"ruleId":"147","severity":1,"message":"169","line":2,"column":68,"nodeType":"149","messageId":"150","endLine":2,"endColumn":86},{"ruleId":"147","severity":1,"message":"170","line":1,"column":17,"nodeType":"149","messageId":"150","endLine":1,"endColumn":25},{"ruleId":"147","severity":1,"message":"152","line":1,"column":27,"nodeType":"149","messageId":"150","endLine":1,"endColumn":36},{"ruleId":"147","severity":1,"message":"171","line":2,"column":23,"nodeType":"149","messageId":"150","endLine":2,"endColumn":34},{"ruleId":"147","severity":1,"message":"168","line":3,"column":8,"nodeType":"149","messageId":"150","endLine":3,"endColumn":13},{"ruleId":"172","severity":1,"message":"173","line":25,"column":38,"nodeType":"174","endLine":25,"endColumn":132},{"ruleId":"147","severity":1,"message":"175","line":12,"column":45,"nodeType":"149","messageId":"150","endLine":12,"endColumn":59},"no-native-reassign",["176"],"no-negated-in-lhs",["177"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","'useEffect' is defined but never used.","'message' is assigned a value but never used.","'Rating' is defined but never used.","'NavLink' is defined but never used.","'userInfo' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'successHotelReview'. Either include it or remove the dependency array.","ArrayExpression",["178"],"'galleryImages' is assigned a value but never used.","'uploading' is assigned a value but never used.","'showPreview' is assigned a value but never used.","'setShowPreview' is assigned a value but never used.","'showError' is assigned a value but never used.","'setShowError' is assigned a value but never used.","'hotelCreateError' is assigned a value but never used.","'axios' is defined but never used.","'HOTEL_CREATE_RESET' is defined but never used.","'useState' is defined but never used.","'useSelector' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'errorHotelList' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"179","fix":"180"},"Update the dependencies array to be: [dispatch, match, errorHotelReview, successHotelReview]",{"range":"181","text":"182"},[1298,1332],"[dispatch, match, errorHotelReview, successHotelReview]"]