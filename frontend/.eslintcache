[{"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\index.js":"1","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\App.js":"3","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\components\\header\\Header.js":"4","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\components\\searchbox\\SearchBox.js":"5","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\components\\sidebar\\Sidebar.js":"6","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\screens\\loginScreen\\LoginScreen.js":"7","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\screens\\registerScreen\\RegisterScreen.js":"8","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\screens\\hotelsScreen\\HotelsScreen.js":"9","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\components\\rating\\Rating.js":"10","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\screens\\hotelScreen\\HotelScreen.js":"11","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\screens\\NewHotelForm\\NewHotelForm.js":"12","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\store.js":"13","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\reducers\\userReducers.js":"14","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\constants\\userConstants.js":"15","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\actions\\userActions.js":"16","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\reducers\\hotelReducers.js":"17","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\constants\\hotelConstants.js":"18","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\actions\\hotelActions.js":"19","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\components\\hotelCard\\HotelCard.js":"20","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\reducers\\favoriteHotelReducers.js":"21","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\constants\\favoriteHotelConstants.js":"22","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\actions\\favoriteHotelActions.js":"23","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\components\\modal\\Modal.js":"24","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\screens\\followedHotels\\FollowedHotels.js":"25","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\screens\\contactUs\\ContactUs.js":"26","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\actions\\whatsappActions.js":"27","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\constants\\whatsappConstants.js":"28","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\reducers\\whatsappReducers.js":"29","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\reducers\\expendReducer.js":"30","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\constants\\sidebarConstants.js":"31"},{"size":561,"mtime":1613922380234,"results":"32","hashOfConfig":"33"},{"size":362,"mtime":499162500000,"results":"34","hashOfConfig":"33"},{"size":1626,"mtime":1616709907966,"results":"35","hashOfConfig":"33"},{"size":2297,"mtime":1616718021925,"results":"36","hashOfConfig":"33"},{"size":929,"mtime":1616700418678,"results":"37","hashOfConfig":"33"},{"size":1943,"mtime":1616717337759,"results":"38","hashOfConfig":"33"},{"size":2031,"mtime":1613923399544,"results":"39","hashOfConfig":"33"},{"size":3373,"mtime":1613923267772,"results":"40","hashOfConfig":"33"},{"size":1561,"mtime":1616699840225,"results":"41","hashOfConfig":"33"},{"size":1428,"mtime":1615593514322,"results":"42","hashOfConfig":"33"},{"size":6132,"mtime":1616438489788,"results":"43","hashOfConfig":"33"},{"size":9814,"mtime":1616437979147,"results":"44","hashOfConfig":"33"},{"size":1497,"mtime":1616717055788,"results":"45","hashOfConfig":"33"},{"size":1102,"mtime":1613922082968,"results":"46","hashOfConfig":"33"},{"size":389,"mtime":1613921785541,"results":"47","hashOfConfig":"33"},{"size":1995,"mtime":1614562619835,"results":"48","hashOfConfig":"33"},{"size":2413,"mtime":1616699258219,"results":"49","hashOfConfig":"33"},{"size":874,"mtime":1615821027662,"results":"50","hashOfConfig":"33"},{"size":3054,"mtime":1616699220291,"results":"51","hashOfConfig":"33"},{"size":1773,"mtime":1616438136746,"results":"52","hashOfConfig":"33"},{"size":2139,"mtime":1615810073977,"results":"53","hashOfConfig":"33"},{"size":784,"mtime":1615602739829,"results":"54","hashOfConfig":"33"},{"size":3337,"mtime":1615810125180,"results":"55","hashOfConfig":"33"},{"size":328,"mtime":1615901818877,"results":"56","hashOfConfig":"33"},{"size":1355,"mtime":1616700299515,"results":"57","hashOfConfig":"33"},{"size":1003,"mtime":1616710738177,"results":"58","hashOfConfig":"33"},{"size":970,"mtime":1616711367790,"results":"59","hashOfConfig":"33"},{"size":178,"mtime":1616710554421,"results":"60","hashOfConfig":"33"},{"size":551,"mtime":1616710031833,"results":"61","hashOfConfig":"33"},{"size":323,"mtime":1616717236749,"results":"62","hashOfConfig":"33"},{"size":47,"mtime":1616716803437,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"6umzj4",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"66"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"66"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"66"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"66"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"66"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"66"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"66"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"66"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\index.js",[],["137","138"],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\App.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\components\\header\\Header.js",["139","140"],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\components\\searchbox\\SearchBox.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\components\\sidebar\\Sidebar.js",["141"],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\screens\\loginScreen\\LoginScreen.js",["142","143"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { login } from '../../actions/userActions.js';\r\n\r\nimport './loginScreen.scss'\r\n\r\nconst LoginScreen = ({  history }) => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const { error, loading, userInfo } = userLogin;\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(login(email, password))\r\n    };\r\n\r\n    useEffect(() => {\r\n        if(userInfo){\r\n            history.push('/')\r\n        }\r\n    }, [history, userInfo])\r\n\r\n    return (\r\n        <div className='login-screen'> \r\n            <form className='form' onSubmit={submitHandler}> \r\n                <h2 className='form__heading'>Login</h2>\r\n                <div className='form__input-area'>\r\n                    <input onChange={(e)=>setEmail(e.target.value)}  value={email} className='form__input' type='email' placeholder='Email' />\r\n                    <span className='form__icon-span'>\r\n                        <i className='fas fa-user form__icon'></i>\r\n                    </span>\r\n                </div>\r\n\r\n                <div className='form__input-area'>\r\n                    <input onChange={(e)=>setPassword(e.target.value)} value={password} className='form__input' type='passowrd' placeholder='Email' />\r\n                    <span className='form__icon-span'>\r\n                        <i className='fas fa-lock form__icon'></i>\r\n                    </span>\r\n                </div>\r\n                <div className='form__buttons'>\r\n                    <button className='form__btn' onClick={submitHandler}>Submit</button>\r\n                    <button className='form__btn' onClick={(e)=>{e.preventDefault(); history.push('/register')}}>Sign-Up</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\screens\\registerScreen\\RegisterScreen.js",["144","145","146"],"import React, { useState, useEffect } from 'react';\r\nimport { register } from '../../actions/userActions.js';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport './registerScreen.scss'\r\n\r\nconst RegisterScreen = ({ history }) => {\r\n    const [email, setEmail] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [coniformPassword, setConiformPassword] = useState('');\r\n    const [message, setMessage] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n    const userRegister = useSelector(state => state.userRegister);\r\n    const { error, loading, userInfo } = userRegister;\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (password !== coniformPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(register(name, email, password))\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if(userInfo){\r\n            history.push('/')\r\n        }\r\n      \r\n    }, [history, userInfo])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className='register-screen'>\r\n            <form className='form' >\r\n                <h2 className='form__heading'>Sigh Up</h2>\r\n                <div className='form__input-area'>\r\n                    <input className='form__input' type='text' placeholder='Name'\r\n                        value={name} onChange={(e) => setName(e.target.value)} />\r\n                    <span className='form__icon-span'>\r\n                        <i className='fas fa-user form__icon'></i>\r\n                    </span>\r\n                </div>\r\n                <div className='form__input-area'>\r\n                    <input className='form__input' type='email' placeholder='Email'\r\n                        value={email} onChange={(e) => setEmail(e.target.value)} />\r\n                    <span className='form__icon-span'>\r\n                        <i className='fas fa-user form__icon'></i>\r\n                    </span>\r\n                </div>\r\n\r\n                <div className='form__input-area'>\r\n                    <input className='form__input' type='passowrd' placeholder='Passowrd'\r\n                        value={password} onChange={(e) => setPassword(e.target.value)} />\r\n                    <span className='form__icon-span'>\r\n                        <i className='fas fa-lock form__icon'></i>\r\n                    </span>\r\n                </div>\r\n                <div className='form__input-area'>\r\n                    <input className='form__input' type='passowrd' placeholder='Confirm Passowrd'\r\n                        value={coniformPassword} onChange={(e) => setConiformPassword(e.target.value)} />\r\n                    <span className='form__icon-span'>\r\n                        <i className='fas fa-lock form__icon'></i>\r\n                    </span>\r\n                </div>\r\n                <div className='form__buttons'>\r\n                    <button className='form__btn' onClick={submitHandler}>Sign-Up</button>\r\n                    <button className='btn form__btn' onClick={(e) => e.preventDefault()}>\r\n                        <span className=\"btn__visable\">Guset</span>\r\n                        <span className=\"btn__invisible\">continue</span>\r\n                    </button>\r\n                </div>\r\n            </form>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\screens\\hotelsScreen\\HotelsScreen.js",["147","148","149"],"import React, { useEffect } from 'react';\r\nimport { listHotels } from '../../actions/hotelActions.js';\r\nimport { listFavoriteHotels } from '../../actions/favoriteHotelActions.js';\r\nimport Rating from '../../components/rating/Rating'\r\nimport { NavLink } from 'react-router-dom';\r\nimport './hotelsScreen.scss'\r\nimport HotelCard from '../../components/hotelCard/HotelCard';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n\r\nexport const HotelsScreen = ({match}) => {\r\n\r\n    const keyword = match.params.keyword\r\n    const pageNumber = match.params.pageNumber || 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const hotelList = useSelector(state => state.hotelList);\r\n    const { loading, error, hotels } = hotelList\r\n\r\n    const favoriteHotelList = useSelector(state => state.favoriteHotelList);\r\n    const { error:errorFavoriteHotelList, loading:loadingFavoriteHotelList, favoriteHotels } = favoriteHotelList;\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(listHotels(keyword, pageNumber))\r\n        dispatch(listFavoriteHotels())\r\n    }, [dispatch,keyword, pageNumber])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className='hotels-screen' style={{ backgroundImage: `url('./hotel1.jpg')` }}>\r\n            {(!loading && !loadingFavoriteHotelList  && hotels.hotels && hotels.hotels.length>0 ) && hotels.hotels.map((hotel, index) => <HotelCard hotel={hotel} \r\n            index={index} key={index} id={!errorFavoriteHotelList?favoriteHotels.find(FH => FH.hotel === hotel._id):undefined} />)\r\n\r\n            } \r\n            \r\n          \r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\components\\rating\\Rating.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\screens\\hotelScreen\\HotelScreen.js",["150","151","152"],"import React, { useState,useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { listHotelDetails, createHotelReview } from '../../actions/hotelActions';\r\nimport Modal from '../../components/modal/Modal';\r\nimport { HOTEL_CREATE_REVIEW_RESET } from '../../constants/hotelConstants';\r\n\r\nimport './hotelScreen.scss'\r\n\r\nexport const HotelScreen = ({ match }) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const hotelDetails = useSelector(state => state.hotelDetails);\r\n    const { loading, error, hotel } = hotelDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const { userInfo } = userLogin\r\n\r\n    \r\n    const hotelReviewCreate = useSelector(state => state.hotelReviewCreate);\r\n    const { success: successHotelReview, error: errorHotelReview } = hotelReviewCreate\r\n\r\n\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n    const [show, setShow] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (successHotelReview) {\r\n            alert('Review Submitted')\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({ type: HOTEL_CREATE_REVIEW_RESET })\r\n        }\r\n        if(errorHotelReview) setShow(true)\r\n        dispatch(listHotelDetails(match.params.id))\r\n    }, [dispatch, match,errorHotelReview])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        console.log(hotel);\r\n        if(!comment) return\r\n        \r\n\r\n        dispatch(createHotelReview(match.params.id, { rating, comment }))\r\n    }\r\n\r\n    return (\r\n        <div className='hotel-screen'>\r\n{(show) && <Modal show={show} setShow={setShow} text={errorHotelReview}/>}\r\n            {loading ? <div>loading</div> : <>  {hotel.images.length === 1 ?\r\n                <div className='hotel-screen__gallery'>\r\n                    <figure >\r\n                        <img alt='image1' className='hotel-screen__gallery-photo1' src={hotel.images[0]} /></figure>\r\n                </div> :\r\n                hotel.images.length === 2 ?\r\n                    <div className='hotel-screen__gallery'>\r\n                        <figure ><img alt='image1' className='hotel-screen__gallery-photo' src={hotel.images[0]} /></figure>\r\n                        <figure ><img alt='image2' className='hotel-screen__gallery-photo' src={hotel.images[1]} /></figure>\r\n                    </div> :\r\n                    <div className='hotel-screen__gallery'>\r\n                        <figure ><img alt='image1' className='hotel-screen__gallery-photo' src={hotel.images[0]} /></figure>\r\n                        <figure ><img alt='image2' className='hotel-screen__gallery-photo' src={hotel.images[1]} /></figure>\r\n                        <figure ><img alt='image3' className='hotel-screen__gallery-photo' src={hotel.images[2]} /></figure>\r\n                    </div>}\r\n\r\n                <div className=\"hotel-screen__overview\">\r\n                    <h1 className=\"hotel-screen__overview-heading\">\r\n                        {hotel.name}\r\n                    </h1>\r\n\r\n\r\n                    <div className=\"hotel-screen__overview-location\">\r\n                        <i className='hotel-screen__me fas fa-map-marked-alt'></i>\r\n                        <button className=\"hotel-screen-btn-inline\">\r\n                           {hotel.city},  {hotel.country}\r\n                        </button>\r\n                    </div>\r\n\r\n                    <div className=\"hotel-screen__overview-rating\">\r\n                        <div className=\"hotel-screen__overview-rating-avarage\">{hotel.rating}</div>\r\n                        <div className=\"hotel-screen__overview-rating-count\">{hotel.numReviews} votes</div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='hotel-screen__content'>\r\n                    <div className='hotel-screen__content-right'>\r\n                        <div className='hotel-screen__content-description'>{hotel.description}</div>\r\n                        <form className='hotel-screen__content-form'>\r\n                            <h3 className='hotel-screen__content-form-header'>Tell us about your experience</h3>\r\n\r\n\r\n                            <div className='hotel-screen__content-form-textarea-container'>\r\n                                <textarea className='hotel-screen__content-form-textarea' \r\n                                value={comment} onChange={(e) => setComment(e.target.value)}/>\r\n                            </div>\r\n                            <div className='hotel-screen__content-form-footer'>\r\n                                <span>0</span><input type='range' min='0' max='10' \r\n                                value={rating} onChange={(e) => setRating(e.target.value)}/><span>10</span>\r\n                                <button onClick={(e)=>submitHandler(e)}>submit</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                    <div className='hotel-screen__content-left'>\r\n                        {hotel.reviews.map((review, index) => (\r\n                            <div key={index} className='hotel-screen__content-left-review'>\r\n                                <blockquote className='hotel-screen__content-left-review-text'>\r\n                                    {review.comment}\r\n                                </blockquote>\r\n                                <div className='hotel-screen__content-left-review-details'>\r\n                                    <div className='hotel-screen__content-left-review-user'>\r\n                                        <h4>{review.name}</h4>\r\n                                        {/* <div>{review.date.toLocaleDateString(\"en-US\")}</div> */}\r\n                                    </div>\r\n                                    <span>{review.rating}</span>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                        <button className=\"hotel-screen__content-left-btn-inline\">Show all <span>&rarr;</span></button>\r\n                    </div>\r\n                </div>\r\n            </>}\r\n        </div >\r\n    )\r\n}\r\n","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\screens\\NewHotelForm\\NewHotelForm.js",["153","154","155","156","157","158","159","160","161"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { createHotelAction } from '../../actions/hotelActions.js'\r\nimport './newHotelForm.scss'\r\nimport { HOTEL_CREATE_RESET } from '../../constants/hotelConstants';\r\nimport HotelCard from '../../components/hotelCard/HotelCard';\r\nimport Modal from '../../components/modal/Modal.js';\r\n\r\n\r\nconst NewHotelForm = () => {\r\n    // add each hook to be obj with name and error\r\n    const [name, setName] = useState({ value: 'Hotel ', error: false })\r\n    const [country, setCountry] = useState({ value: '', error: false })\r\n    const [city, setCity] = useState({ value: '', error: false })\r\n    const [street, setStreet] = useState({ value: '', error: false })\r\n    const [price, setPrice] = useState({ value: 0, error: false })\r\n    const [description, setDescription] = useState({ value: '', error: false })\r\n    const [coverImage, setCoverImage] = useState({ value: '', error: false })\r\n    const [images, setImages] = useState({ value: '', error: false })\r\n    const [coverImageURL, setCoverImageURL] = useState('')\r\n    const [galleryImages, setGalleryImages] = useState([''])\r\n    const [uploading, setUploading] = useState(false);\r\n    const [show, setShow] = useState(true);\r\n    const [showPreview, setShowPreview] = useState(true);\r\n    const [showError, setShowError] = useState(true);\r\n    const [error, setError] = useState(false);\r\n    const [showModal, setShowModal] = useState(false)\r\n    const hotelCreate = useSelector(state => state.hotelCreate);\r\n    const { error: hotelCreateError, loading, hotel } = hotelCreate;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const setGalleryImagesFunc = (e) => {\r\n        let images = []\r\n        Object.keys(e.target.files).map(f => images.push(URL.createObjectURL(e.target.files[f])))\r\n        setGalleryImages(images)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (hotel) {\r\n            dispatch({ type: HOTEL_CREATE_RESET })\r\n            setName({ value: 'Hotel ', error: false });\r\n            setStreet({ value: '', error: false });\r\n            setPrice({ value: 0, error: false });\r\n            setCountry({ value: '', error: false });\r\n            setCity({ value: '', error: false });\r\n            setCoverImage({ value: '', error: false });\r\n            setImages({ value: '', error: false });\r\n            setDescription({ value: '', error: false });\r\n        }\r\n    }, [dispatch, hotel])\r\n\r\n\r\n    const uploadCoverHandler = async (file) => {\r\n        const formData = new FormData()\r\n        formData.append('image', file)\r\n        setUploading(true)\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/upload', formData, config)\r\n            setCoverImage({ value: data });\r\n            setUploading(false)\r\n\r\n        } catch (error) {\r\n            console.error(error)\r\n        }\r\n    }\r\n\r\n    const uploadGalleryHandler = async (files) => {\r\n        //add setUploading and loader so form will send after this\r\n        if (files.length > 3) return alert('asdadsassd')\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n            let tempImages = [];\r\n\r\n            (async () => {\r\n                Object.keys(files).map(async (f) => {\r\n                    const formData = new FormData()\r\n                    setUploading(true)\r\n                    formData.append('image', files[f])\r\n                    const { data } = await axios.post('/api/upload', formData, config)\r\n                    tempImages.push(data)\r\n                })\r\n            })();\r\n\r\n            setImages({ value: tempImages })\r\n            setUploading(false)\r\n\r\n        } catch (error) {\r\n            console.error(error)\r\n        }\r\n    }\r\n\r\n    const checkError = (value, index) => {\r\n        if (value.length === 0 || value === 0) {\r\n            setError(true)\r\n\r\n            switch (index) {\r\n                case 0:\r\n                    setName({ value, error: true })\r\n                    break;\r\n                case 1:\r\n                    setCountry({ value, error: true })\r\n                    break;\r\n                case 2:\r\n                    setCity({ value, error: true })\r\n                    break;\r\n                case 3:\r\n                    setStreet({ value, error: true })\r\n                    break;\r\n                case 4:\r\n                    setPrice({ value, error: true })\r\n                    break;\r\n                case 5:\r\n                    setDescription({ value, error: true })\r\n                    break;\r\n                case 6:\r\n                    setImages({ value, error: true })\r\n                    break;\r\n                case 7:\r\n                    setCoverImage({ value, error: true })\r\n                    break;\r\n\r\n                default: return\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const submitHandler = async (e) => {\r\n        e.preventDefault();\r\n\r\n        [name, country, city, street, price, description, images, coverImage].map((input, index) => checkError(input.value, index))\r\n        const errorIndex = [name, country, city, street, price, description, images, coverImage].findIndex((input) => (input.value.length === 0 || input.value === 0))\r\n\r\n        if (errorIndex > 0) {\r\n            return\r\n        }\r\n        dispatch(createHotelAction({\r\n            name, country, city, street, description, price, coverImage, images\r\n        }))\r\n        setShowModal(true)\r\n        setTimeout(()=>{setShowModal(false)},3000)\r\n    };\r\n\r\n    // aDd action that updates all the inputs to store when clicking preview and use effect that filles the inputs\r\n    return (\r\n        <>\r\n{(showModal) && <Modal show={showModal} setShow={setShowModal} text='Hotel Submitted'/>}\r\n \r\n            <form className='new-hotel'>\r\n                <h1 className='new-hotel__heading'>Add New Hotel</h1>\r\n                <div className={`new-hotel__input-area ${name.error ? 'error' : 'no-error'}`}>\r\n                    <input className='new-hotel__input' type='passowrd' placeholder='Name'\r\n                        value={name.value} onChange={(e) => setName({ value: e.target.value })} />\r\n\r\n                </div>\r\n                <div className='new-hotel__adress-area'>\r\n                    <input className={`new-hotel__adress-input ${country.error ? 'error' : 'no-error'}`} type='text' placeholder='country'\r\n                        value={country.value} onChange={(e) => setCountry({ value: e.target.value })} />\r\n                    <input className={`new-hotel__adress-input ${city.error ? 'error' : 'no-error'}`} type='text' placeholder='city'\r\n                        value={city.value} onChange={(e) => setCity({ value: e.target.value })} />\r\n                    <input className={`new-hotel__adress-input ${street.error ? 'error' : 'no-error'}`} type='text' placeholder='street'\r\n                        value={street.value} onChange={(e) => setStreet({ value: e.target.value })} />\r\n\r\n                </div>\r\n                <div className='new-hotel__input-area'>\r\n                    <input className={`new-hotel__input ${price.error ? 'error' : 'no-error'}`} type='number' placeholder='price'\r\n                        value={price.value} onChange={(e) => setPrice({ value: e.target.value })} />\r\n\r\n                </div>\r\n                <div className='new-hotel__input-area'>\r\n                    <textarea className={`new-hotel__input textarea ${description.error ? 'error' : 'no-error'}`} placeholder='description'\r\n                        value={description.value} onChange={(e) => setDescription({ value: e.target.value })} />\r\n\r\n                </div>\r\n\r\n                <div className='new-hotel__image-area '>\r\n\r\n                    <label className={`new-hotel__image-label ${coverImage.error ? 'error' : 'no-error'}`} htmlFor='firstImage'>\r\n                        <input className='new-hotel__image-input' type=\"file\" accept=\"image/*\" placeholder=\"image\" id='firstImage'\r\n                            onChange={((e) => { setCoverImageURL(URL.createObjectURL(e.target.files[0])); uploadCoverHandler(e.target.files[0]) })} />add cover image</label>\r\n\r\n                    <label className={`new-hotel__image-label ${images.error ? 'error' : 'no-error'}`} htmlFor='secondImage'>\r\n                        <input className='new-hotel__image-input' type=\"file\" accept=\"image/*\" placeholder=\"image\" id='secondImage' multiple\r\n                            onChange={((e) => { setGalleryImagesFunc(e); uploadGalleryHandler(e.target.files) })} />\r\n                             add images (3 max)\r\n                    </label>\r\n\r\n                </div>\r\n                <div className='new-hotel__buttons-area'>\r\n                    <button className='new-hotel__btn' onClick={(e) => { e.preventDefault(); setShow(!show) }}>preview</button>\r\n                    <button className='new-hotel__btn' onClick={submitHandler}>submit</button>\r\n                </div>\r\n            </form>\r\n            <div className={`new-hotel__modal ${show ? 'hidden' : ''}`} onClick={()=>setShow(!show)}>\r\n                <div className={`new-hotel__modal-content`} >\r\n                    <HotelCard\r\n                        hotel={{\r\n                            _id: '21', name: name.value,\r\n                            adress: { city: city.value, street: street.value, country: country.value },\r\n                            rating: 8, coverImage:coverImageURL,\r\n                        }} index='demo' />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NewHotelForm\r\n","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\store.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\reducers\\userReducers.js",["162"],"import axios from 'axios';\r\nimport {\r\n   USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT,\r\n    USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS,\r\n} from '../constants/userConstants';\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true };\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload };\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case USER_LOGOUT:\r\n            return {};\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true };\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload };\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state\r\n    }\r\n}","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\actions\\userActions.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\reducers\\hotelReducers.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\constants\\hotelConstants.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\actions\\hotelActions.js",["163"],"import {\r\n    HOTEL_CREATE_REQUEST, HOTEL_CREATE_SUCCESS, HOTEL_CREATE_FAIL, HOTEL_CREATE_RESET,\r\n    HOTEL_LIST_REQUEST, HOTEL_LIST_SUCCESS, HOTEL_LIST_FAIL,\r\n    HOTEL_DETAILS_REQUEST, HOTEL_DETAILS_SUCCESS, HOTEL_DETAILS_FAIL,\r\n    HOTEL_CREATE_REVIEW_REQUEST, HOTEL_CREATE_REVIEW_SUCCESS, HOTEL_CREATE_REVIEW_FAIL\r\n\r\n} from '../constants/hotelConstants.js'\r\nimport axios from 'axios';\r\n\r\n\r\nexport const listHotels = (keyword = '', pageNumber = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: HOTEL_LIST_REQUEST })\r\n        const { data } = await axios.get(`/api/hotels?keyword=${keyword}&pageNumber=${pageNumber}`)\r\n        // const { data } = await axios.get(`/api/hotels`)\r\n        dispatch({ type: HOTEL_LIST_SUCCESS, payload: data })\r\n    } catch (error) {\r\n        dispatch({ type: HOTEL_LIST_FAIL, payload: error.response && error.response.data.message ? error.response.data.message : error.message })\r\n    }\r\n}\r\nexport const listHotelDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: HOTEL_DETAILS_REQUEST })\r\n        const { data } = await axios.get('/api/hotels/' + id)\r\n        dispatch({ type: HOTEL_DETAILS_SUCCESS, payload: data })\r\n    } catch (error) {\r\n        dispatch({ type: HOTEL_DETAILS_FAIL, payload: error.response && error.response.data.message ? error.response.data.message : error.message })\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const createHotelAction = (hotel) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: HOTEL_CREATE_REQUEST\r\n        })\r\n        const { userLogin: { userInfo } } = getState()\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n        const { data } = await axios.post(`/api/hotels`, hotel, config)\r\n\r\n        dispatch({\r\n            type: HOTEL_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: HOTEL_CREATE_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const createHotelReview = (hotelId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: HOTEL_CREATE_REVIEW_REQUEST\r\n        })\r\n        const { userLogin: { userInfo } } = getState()\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n     await axios.post(`/api/hotels/${hotelId}/reviews`, review, config)\r\n        dispatch({\r\n            type: HOTEL_CREATE_REVIEW_SUCCESS,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: HOTEL_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        })\r\n    }\r\n}","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\components\\hotelCard\\HotelCard.js",["164","165","166","167","168"],"import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\nimport Rating from '../../components/rating/Rating'\r\nimport { NavLink } from 'react-router-dom';\r\nimport './hotelCard.scss'\r\nimport img from './hotel1.jpg'\r\nimport { createFavoriteHotelAction,deleteFavoriteHotel } from '../../actions/favoriteHotelActions';\r\n\r\nconst HotelCard = ({ hotel, index, id }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const toggleFavoriteHotel = () => {\r\n        if (!id) {\r\n            dispatch(createFavoriteHotelAction(hotel))\r\n        } else {\r\n            dispatch(deleteFavoriteHotel(id._id))\r\n        }\r\n\r\n    }\r\n    return (\r\n\r\n        <div key={index} className='hotel-card'>\r\n            <div className='hotel-card__heading'>\r\n                {hotel.coverImage && <img className='hotel-card__background-image' src={hotel.coverImage} alt='background-image' />}\r\n                <h3 className='hotel-card__name'>{hotel.name}</h3>\r\n                <i className={` hotel-card__invisable-like ${id ? 'fas fa-heart' : 'far fa-heart'}`} onClick={toggleFavoriteHotel}></i>\r\n                <i className='fas fa-map-marked-alt hotel-card__invisable-map'></i>\r\n            </div>\r\n            <div className='hotel-card__adress'>\r\n                {hotel.city} {hotel.street}, {hotel.country}\r\n            </div>\r\n            <Rating value={hotel.rating/2} text={`${hotel.numReviews | index !== 'demo'? 0:5} reviews`} />\r\n            <div className='hotel-card__footer'>\r\n                <NavLink to={index !== 'demo'?`/hotel/${hotel._id}`:'#'} className='hotel-card__btn'>\r\n                    details\r\n                </NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HotelCard\r\n","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\reducers\\favoriteHotelReducers.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\constants\\favoriteHotelConstants.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\actions\\favoriteHotelActions.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\components\\modal\\Modal.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\screens\\followedHotels\\FollowedHotels.js",["169"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { listFavoriteHotels } from '../../actions/favoriteHotelActions.js';\r\nimport { listHotels } from '../../actions/hotelActions.js';\r\n\r\nimport HotelCard from '../../components/hotelCard/HotelCard.js';\r\nimport './followedHotels.scss';\r\n\r\nconst FollowedHotels = () => {\r\n    const dispatch = useDispatch()\r\n    const hotelList = useSelector(state => state.hotelList);\r\n    const { loading:loadingHotelList, error:errorHotelList, hotels } = hotelList\r\n\r\n    const favoriteHotelList = useSelector(state => state.favoriteHotelList);\r\n    const { error, loading, favoriteHotels } = favoriteHotelList;\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(listHotels())\r\n        dispatch(listFavoriteHotels())\r\n    }, [dispatch,])\r\n\r\n    return (\r\n        <div className='hotels-screen' style={{ backgroundImage: `url('./hotel1.jpg')` }}>\r\n            {(!loading && !loadingHotelList &&  hotels.hotels && hotels.hotels.length>0 && favoriteHotels.length>0) && favoriteHotels.map((favoriteHotel, index) =>\r\n             <HotelCard hotel={favoriteHotel.hotel}\r\n                index={index} key={index} id={!error ? favoriteHotels.find(FH => FH.hotel === favoriteHotel.hotel) : undefined} />)\r\n\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FollowedHotels\r\n","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\screens\\contactUs\\ContactUs.js",["170","171","172"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { createHotelAction } from '../../actions/whatsappActions.js'\r\nimport './contactUs.scss'\r\nimport Modal from '../../components/modal/Modal.js';\r\n\r\n\r\n\r\nconst ContactUs = () => {\r\n\r\n    const [showModal, setShowModal] = useState(false)\r\n    const [message, setMessage] = useState('')\r\n    const dispatch = useDispatch();\r\n\r\n    const postMessage = async (e) => {\r\n        e.preventDefault();\r\n        dispatch(createHotelAction(message))\r\n        setShowModal(true)\r\n        setTimeout(() => { setShowModal(false) }, 3000)\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            {(showModal) && <Modal show={showModal} setShow={setShowModal} text='message Submitted' />}\r\n            <input type=\"text\" onChange={(e) => setMessage(e.target.value)} />\r\n            <button onClick={postMessage}>Send</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContactUs\r\n","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\actions\\whatsappActions.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\constants\\whatsappConstants.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\reducers\\whatsappReducers.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\reducers\\expendReducer.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\vacation-project\\frontend\\src\\constants\\sidebarConstants.js",[],{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","severity":1,"message":"178","line":18,"column":13,"nodeType":"179","messageId":"180","endLine":18,"endColumn":18},{"ruleId":"177","severity":1,"message":"181","line":18,"column":20,"nodeType":"179","messageId":"180","endLine":18,"endColumn":27},{"ruleId":"177","severity":1,"message":"182","line":1,"column":24,"nodeType":"179","messageId":"180","endLine":1,"endColumn":33},{"ruleId":"177","severity":1,"message":"178","line":13,"column":13,"nodeType":"179","messageId":"180","endLine":13,"endColumn":18},{"ruleId":"177","severity":1,"message":"181","line":13,"column":20,"nodeType":"179","messageId":"180","endLine":13,"endColumn":27},{"ruleId":"177","severity":1,"message":"183","line":12,"column":12,"nodeType":"179","messageId":"180","endLine":12,"endColumn":19},{"ruleId":"177","severity":1,"message":"178","line":16,"column":13,"nodeType":"179","messageId":"180","endLine":16,"endColumn":18},{"ruleId":"177","severity":1,"message":"181","line":16,"column":20,"nodeType":"179","messageId":"180","endLine":16,"endColumn":27},{"ruleId":"177","severity":1,"message":"184","line":4,"column":8,"nodeType":"179","messageId":"180","endLine":4,"endColumn":14},{"ruleId":"177","severity":1,"message":"185","line":5,"column":10,"nodeType":"179","messageId":"180","endLine":5,"endColumn":17},{"ruleId":"177","severity":1,"message":"178","line":19,"column":22,"nodeType":"179","messageId":"180","endLine":19,"endColumn":27},{"ruleId":"177","severity":1,"message":"178","line":13,"column":22,"nodeType":"179","messageId":"180","endLine":13,"endColumn":27},{"ruleId":"177","severity":1,"message":"186","line":16,"column":13,"nodeType":"179","messageId":"180","endLine":16,"endColumn":21},{"ruleId":"187","severity":1,"message":"188","line":36,"column":8,"nodeType":"189","endLine":36,"endColumn":42,"suggestions":"190"},{"ruleId":"177","severity":1,"message":"191","line":22,"column":12,"nodeType":"179","messageId":"180","endLine":22,"endColumn":25},{"ruleId":"177","severity":1,"message":"192","line":23,"column":12,"nodeType":"179","messageId":"180","endLine":23,"endColumn":21},{"ruleId":"177","severity":1,"message":"193","line":25,"column":12,"nodeType":"179","messageId":"180","endLine":25,"endColumn":23},{"ruleId":"177","severity":1,"message":"194","line":25,"column":25,"nodeType":"179","messageId":"180","endLine":25,"endColumn":39},{"ruleId":"177","severity":1,"message":"195","line":26,"column":12,"nodeType":"179","messageId":"180","endLine":26,"endColumn":21},{"ruleId":"177","severity":1,"message":"196","line":26,"column":23,"nodeType":"179","messageId":"180","endLine":26,"endColumn":35},{"ruleId":"177","severity":1,"message":"178","line":27,"column":12,"nodeType":"179","messageId":"180","endLine":27,"endColumn":17},{"ruleId":"177","severity":1,"message":"197","line":30,"column":20,"nodeType":"179","messageId":"180","endLine":30,"endColumn":36},{"ruleId":"177","severity":1,"message":"181","line":30,"column":38,"nodeType":"179","messageId":"180","endLine":30,"endColumn":45},{"ruleId":"177","severity":1,"message":"198","line":1,"column":8,"nodeType":"179","messageId":"180","endLine":1,"endColumn":13},{"ruleId":"177","severity":1,"message":"199","line":2,"column":68,"nodeType":"179","messageId":"180","endLine":2,"endColumn":86},{"ruleId":"177","severity":1,"message":"200","line":1,"column":17,"nodeType":"179","messageId":"180","endLine":1,"endColumn":25},{"ruleId":"177","severity":1,"message":"182","line":1,"column":27,"nodeType":"179","messageId":"180","endLine":1,"endColumn":36},{"ruleId":"177","severity":1,"message":"201","line":2,"column":23,"nodeType":"179","messageId":"180","endLine":2,"endColumn":34},{"ruleId":"177","severity":1,"message":"198","line":3,"column":8,"nodeType":"179","messageId":"180","endLine":3,"endColumn":13},{"ruleId":"202","severity":1,"message":"203","line":25,"column":38,"nodeType":"204","endLine":25,"endColumn":132},{"ruleId":"177","severity":1,"message":"205","line":12,"column":45,"nodeType":"179","messageId":"180","endLine":12,"endColumn":59},{"ruleId":"177","severity":1,"message":"182","line":1,"column":27,"nodeType":"179","messageId":"180","endLine":1,"endColumn":36},{"ruleId":"177","severity":1,"message":"201","line":2,"column":23,"nodeType":"179","messageId":"180","endLine":2,"endColumn":34},{"ruleId":"177","severity":1,"message":"198","line":3,"column":8,"nodeType":"179","messageId":"180","endLine":3,"endColumn":13},"no-native-reassign",["206"],"no-negated-in-lhs",["207"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","'useEffect' is defined but never used.","'message' is assigned a value but never used.","'Rating' is defined but never used.","'NavLink' is defined but never used.","'userInfo' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'successHotelReview'. Either include it or remove the dependency array.","ArrayExpression",["208"],"'galleryImages' is assigned a value but never used.","'uploading' is assigned a value but never used.","'showPreview' is assigned a value but never used.","'setShowPreview' is assigned a value but never used.","'showError' is assigned a value but never used.","'setShowError' is assigned a value but never used.","'hotelCreateError' is assigned a value but never used.","'axios' is defined but never used.","'HOTEL_CREATE_RESET' is defined but never used.","'useState' is defined but never used.","'useSelector' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'errorHotelList' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"209","fix":"210"},"Update the dependencies array to be: [dispatch, match, errorHotelReview, successHotelReview]",{"range":"211","text":"212"},[1298,1332],"[dispatch, match, errorHotelReview, successHotelReview]"]